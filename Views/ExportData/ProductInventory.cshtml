@using DataAccess.POCO
@using PagedList
@using PagedList.Mvc

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = ViewData["SiteName"].ToString();
    ViewBag.PageTitle = "Products/Inventory Data";
    ViewBag.ExportData = "active open";
}

<div class="panel">
    <div class="panel-body container-fluid">
        <div class="row">
            <a href="@Url.Action("ExportProductInventoryExcel", new { @fromDate = ViewData["FromDate"].ToString(), @toDate = ViewData["ToDate"].ToString() })" class="btn btn-primary" style="float:left;margin-right:10px;">Download to Excel</a>
            <a href="@Url.Action("Options")" class="btn btn-default" style="float:left;">Back</a>
            @using (Html.BeginForm("ProductInventory", "ExportData", FormMethod.Post, new { @id = "page-size" }))
            {
                <div class="col-md-3 pull-right">
                    @Html.DropDownList("PageSize", (SelectList)ViewData["PageSizeDropdown"], new { @class = "form-control" })
                </div>
                @Html.Label("Page Size:", new { @class = "col-md-3 pull-right", @style = "top:6px;text-align:right;" })
            }
        </div>
        <div class="row margin-top-15">
            <div class="col-xlg-12 col-md-12">
                <div class="table-responsive">
                    <table class="table table-hover table-bordered table-striped">
                        <thead>
                            <tr>
                                <th style="min-width: 40px;">#</th>
                                <th style="min-width: 80px;">Currency Code</th>
                                <th style="min-width: 150px;">Currency Name</th>
                                <th style="min-width: 100px;">Buy Rate</th>
                                <th style="min-width: 100px;">Sell Rate</th>
                                <th style="min-width: 80px;">Decimal</th>
                                <th style="min-width: 80px;">Symbol</th>
                                <th style="min-width: 80px;">Acceptable Range</th>
                                <th style="min-width: 100px;">Unit</th>
                                <th style="min-width: 120px;">Payment Mode Allowed</th>
                                <th style="min-width: 120px;">Transaction Type Allowed</th>
                                <th style="min-width: 100px;">Encashment Rate</th>
                                <th style="min-width: 100px;">Denomination</th>
                                <th style="min-width: 200px;">Total In Account</th>
                                <th style="min-width: 120px;">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                IPagedList<Product> products = (IPagedList<Product>)ViewData["Product"];

                                if (products.Count > 0)
                                {
                                    int page = Convert.ToInt32(ViewData["Page"]) - 1;
                                    int pageSize = Convert.ToInt32(ViewData["PageSize"]);
                                    int i = 1;

                                    foreach (Product product in products)
                                    {
                                        string hightlightCls = "";
                                        if (product.ProductInventories[0].TotalInAccount < 0)
                                        {
                                            hightlightCls = "bg-red-100";
                                        }

                                        string dp = "#,##0";
                                        if (product.Decimal == 1)
                                        {
                                            dp += ".0";
                                        }
                                        else if (product.Decimal == 2)
                                        {
                                            dp += ".00";
                                        }
                                        else if (product.Decimal == 3)
                                        {
                                            dp += ".000";
                                        }
                                        else if (product.Decimal == 4)
                                        {
                                            dp += ".0000";
                                        }
                                        
                                        <tr class="@hightlightCls">
                                            <td>@(i + page * pageSize)</td>
                                            <td>@product.CurrencyCode</td>
                                            <td>@product.CurrencyName</td>
                                            <td>
                                                @if (product.BuyRate != null)
                                                {
                                                    @Convert.ToDecimal(product.BuyRate).ToString(dp);
                                                }
                                            </td>
                                            <td>
                                                @if (product.SellRate != null)
                                                {
                                                    @Convert.ToDecimal(product.SellRate).ToString(dp);
                                                }
                                            </td>
                                            <td>@product.Decimal</td>
                                            <td>@product.Symbol</td>
                                            <td>@product.AcceptableRange</td>
                                            <td>@product.Unit</td>
                                            <td>
                                                @{
                                                    string[] paymentMode = product.PaymentModeAllowed.Split(',');

                                                    foreach (string mode in paymentMode)
                                                    {
                                                        @mode<br />
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    string[] transactionType = product.TransactionTypeAllowed.Split(',');

                                                    foreach (string type in transactionType)
                                                    {
                                                        @type<br />
                                                    }
                                                }
                                            </td>
                                            <td>@product.EncashmentRate.ToString("#,##0.########")</td>
                                            <td>
                                                @foreach (ProductDenomination denomination in product.ProductDenominations.OrderByDescending(e => e.DenominationValue).ToList())
                                                {
                                                    if (denomination.DenominationValue == 0)
                                                    {
                                                        @("coins")<br />
                                                    }
                                                    else
                                                    {
                                                        @denomination.DenominationValue<br />
                                                    }
                                                }
                                            </td>
                                            <td>@(product.Symbol + product.ProductInventories[0].TotalInAccount.ToString(dp)) <a href="javascript:void(0)" onclick="ViewInventoryLogs(@product.ID)" style="text-decoration: none;" data-toggle="tooltip" data-original-title="View Inventory Log">[+]</a></td>
                                            <td>@product.Status</td>
                                        </tr>
                                        i++;
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="15" class="no-records-found">--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No record to display&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No record to display&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;No record to display&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="pagination">
                @Html.PagedListPager((IPagedList)ViewData["Product"], page => Url.Action("/ProductInventory", "ExportData", new { page, currentFilter = ViewBag.CurrentFilter }), new PagedListRenderOptions { LinkToFirstPageFormat = "<< First", LinkToPreviousPageFormat = "< Previous", LinkToNextPageFormat = "Next >", LinkToLastPageFormat = "Last >>" })
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="inventory-log-modal" aria-hidden="false" aria-labelledby="modal-label"
     role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content form-horizontal">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title" id="modal-label"></h4>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>

<script>
    $("#PageSize").on("change", function () {
        $("#page-size").submit();
    });

    function ViewInventoryLogs(id) {
        var url = "@Url.Action("ViewInventoryLogs", "ExportData")";
        $.ajax({
            type: "GET",
            url: url,
            data: { id: id },
            success: function (data) {
                $("#inventory-log-modal .modal-body").html(data);
                $("#inventory-log-modal").modal("show");
            }
        });
    }
</script>