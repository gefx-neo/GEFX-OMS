@using DataAccess.POCO

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = ViewData["SiteName"].ToString();
	ViewBag.PageTitle = "New Agent";
	ViewBag.ManageAgents = "active open";
}

<div class="panel">
	<div class="panel-body container-fluid">
		<div class="row row-lg">
			<div class="col-xlg-12 col-md-12">
				@if (TempData["Result"] != null)
				{
					string[] result = TempData["Result"].ToString().Split('|');

					<div class="alert alert-@result[0]">
						<button type="button" class="close" data-dismiss="alert">&times;</button>
						@result[1]
					</div>
				}

				@using (Html.BeginForm("Create", "Agent", FormMethod.Post, new { @class = "form-horizontal", @id = "form-submit" }))
				{
					Agents agents = new Agents();

					<div class="form-group">
						@Html.LabelFor(u => agents.AgentId, new { @class = "col-sm-2 control-label" })
						<div class="col-sm-10">
							@Html.TextBoxFor(u => agents.AgentId, new { @class = "form-control", @placeholder = "Unique Agent ID" })
							@Html.ValidationMessageFor(u => agents.AgentId)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(u => agents.CompanyName, new { @class = "col-sm-2 control-label" })
						<div class="col-sm-10">
							@Html.TextBoxFor(u => agents.CompanyName, new { @class = "form-control" })
							@Html.ValidationMessageFor(u => agents.CompanyName)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(u => agents.ContactPerson, new { @class = "col-sm-2 control-label" })
						<div class="col-sm-10">
							@Html.TextBoxFor(u => agents.ContactPerson, new { @class = "form-control" })
							@Html.ValidationMessageFor(u => agents.ContactPerson)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(u => agents.ContactNumber, new { @class = "col-sm-2 control-label" })
						<div class="col-sm-10">
							@Html.TextBoxFor(u => agents.ContactNumber, new { @class = "form-control" })
							@Html.ValidationMessageFor(u => agents.ContactNumber)
						</div>
					</div>
					
					<div class="form-group">
						@Html.LabelFor(u => agents.Status, new { @class = "col-sm-2 control-label" })
						<div class="col-sm-10">
							@Html.DropDownListFor(u => agents.Status, (SelectList)ViewData["StatusDropdown"], new { @class = "form-control" })
							@Html.ValidationMessageFor(u => agents.Status)
						</div>
					</div>

					<div class="form-group">
						<div class="col-sm-10 col-sm-offset-2">
							<button type="button" class="btn btn-primary" onclick="disableButton()" id="disable_button">Save</button>
							<button type="reset" class="btn btn-default btn-outline">Reset</button>
							@{
								int page = 1;

								if (ViewData["Page"] != null)
								{
									page = Convert.ToInt32(ViewData["Page"]);
								}
							}
							<a href="@Url.Action("Listing", new { @page = page })" class="btn btn-danger">Back</a>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>

<script>
    function disableButton()
    {
        $("#disable_button").attr("disabled", true);
        $("#form-submit").submit();
	}
</script>